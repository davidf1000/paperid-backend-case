{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Paper.id Backend Engineer case - David Fauzi",
    "license": {
      "name": "MIT"
    },
    "description": "OPEN API REST API Documentation created using Swagger, consists of all api endpoints, required or optional path and query parameter, response data definition for both successfull and failed request"
  },
  "host": "http://localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "authentication",
      "description": "user auth"
    },
    {
      "name": "accounts",
      "description": "financial accounts for user"
    },
    {
      "name": "transactions",
      "description": "Transactions for each financial account created by user"
    },
    {
      "name": "summary",
      "description": "User monthly and daily spending summary"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/register": {
      "post": {
        "summary": "User Register",
        "operationId": "userRegister",
        "tags": ["authentication"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "register information",
            "type": "object",
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Account created"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "user login",
        "operationId": "userLogin",
        "tags": ["authentication"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "login information",
            "type": "object",
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Successful",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/User"
                },
                "message": {
                  "type": "string",
                  "example": "Login Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "post": {
        "summary": "User profile",
        "operationId": "userProfile",
        "tags": ["authentication"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Profile Successful",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/UserWithId"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "summary": "List all financial accounts",
        "operationId": "listAccounts",
        "tags": ["accounts"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "description": "Query all accounts for specified userId only",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page for pagination (from page 0)",
            "type": "number"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "description": "Number of records per page",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Get List of Financial Accounts Successful",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Accounts"
                },
                "message": {
                  "type": "string",
                  "example": "Operation Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a financial account",
        "operationId": "createAccount",
        "tags": ["accounts"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "financial account",
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AccountInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create Financial Accounts Successful",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Account"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "summary": "Info for a specific financial account",
        "operationId": "showAccountById",
        "tags": ["accounts"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The id of the account to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get info of Financial Accounts successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Account"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update financial account",
        "operationId": "updateAccountById",
        "tags": ["accounts"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The id of the pet to update",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Update Financial Accounts Successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Account"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete financial account",
        "operationId": "deleteAccountById",
        "tags": ["accounts"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The id of the pet to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Financial Accounts Successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Account"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "List all transactions",
        "operationId": "listTransactions",
        "tags": ["transactions"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "description": "Query all accounts for specified userId only",
            "type": "string"
          },
          {
            "name": "financialId",
            "in": "query",
            "required": false,
            "description": "Query all accounts for specified financial account id only",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page for pagination (from page 0)",
            "type": "number"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "description": "Number of records per page",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "List all Transactions successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Transactions"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a transaction",
        "operationId": "createTransactions",
        "tags": ["transactions"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "transaction",
            "type": "object",
            "schema": {
              "$ref": "#/definitions/TransactionInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create Transactions successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Transactions"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "summary": "Info for a specific transaction",
        "operationId": "showTransactionById",
        "tags": ["transactions"],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "The id of the transaction to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Transactions by id successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update transaction",
        "operationId": "updateTransactionById",
        "tags": ["transactions"],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "The id of the transaction to update",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Update Transactions successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete transaction by id",
        "operationId": "deleteTransactionById",
        "tags": ["transactions"],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "The id of the pet to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Transactions successfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    },
    "/summary": {
      "get": {
        "summary": "Get monthly and daily financial summary",
        "operationId": "getSummary",
        "tags": ["summary"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type of summary (daily/monthly)",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "date with format YYYY-MM-DD for daily and YYYY-MM for monthly",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "description": "Calculate Summary for all transactions created by with specified userId only",
            "type": "string"
          },
          {
            "name": "financialId",
            "in": "query",
            "required": false,
            "description": "Calculate Summary for all transactions created by specified financial account id only",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Summary Sucessfull",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "$ref": "#/definitions/Summary"
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          },
          "4XX, 5XX": {
            "description": "Unexpected error",
            "schema": {
              "types": "object",
              "required": ["status", "data", "message"],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "message": {
                  "type": "string",
                  "example": "Error has occurred"
                }
              }
            }
          }
        }
      }
    }
  },

  "definitions": {
    "LoginInfo": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "username": {
          "type": "string",
          "example": "username"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "User": {
      "type": "object",
      "required": ["userId", "token"],
      "properties": {
        "userId": {
          "type": "string",
          "example": "userId"
        },
        "token": {
          "type": "string",
          "example": "d06d8777-896e-4a74-8f81-7b530b17f9db"
        }
      }
    },
    "UserWithId": {
      "type": "object",
      "required": ["userId", "username"],
      "properties": {
        "userId": {
          "type": "string",
          "example": "d06d8777-896e-4a74-8f81-7b530b17f9db"
        },
        "username": {
          "type": "string",
          "example": "username"
        }
      }
    },
    "AccountInput": {
      "type": "object",
      "required": ["name", "userId"],
      "properties": {
        "name": {
          "type": "string",
          "example": "Cash"
        },
        "userId": {
          "type": "string",
          "example": "d06d8777-896e-4a74-8f81-7b530b17f9db"
        }
      }
    },
    "Account": {
      "type": "object",
      "required": ["id", "name", "status", "user"],
      "properties": {
        "id": {
          "type": "string",
          "example": "d06d8777-896e-4a74-8f81-7b530b17f9db"
        },
        "name": {
          "type": "string",
          "example": "Cash"
        },
        "status": {
          "type": "boolean",
          "example": true
        },
        "user": {
          "$ref": "#/definitions/UserWithId"
        }
      }
    },
    "Accounts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Account"
      }
    },
    "TransactionInput": {
      "type": "object",
      "required": ["title", "desc", "amount", "date", "financialId"],
      "properties": {
        "title": {
          "type": "string",
          "example": "Cash"
        },
        "desc": {
          "type": "string",
          "example": "Cash"
        },
        "amount": {
          "type": "number",
          "example": 15000
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "financialId": {
          "type": "string",
          "example": "Cad06d8777-896e-4a74-8f81-7b530b17f9dbsh"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "required": [
        "id",
        "title",
        "desc",
        "amount",
        "date",
        "account",
        "status"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "d06d8777-896e-4a74-8f81-7b530b17f9db"
        },
        "title": {
          "type": "string",
          "example": "Cash"
        },
        "desc": {
          "type": "string",
          "example": "Cash"
        },
        "amount": {
          "type": "number",
          "example": 15000
        },
        "status": {
          "type": "boolean",
          "example": true
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "account": {
          "$ref": "#/definitions/Account"
        }
      }
    },
    "Transactions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Transaction"
      }
    },
    "Summary": {
      "type": "object",
      "required": [
        "date",
        "totalExpense",
        "totalIncome",
        "netIncome",
        "maximumExpense"
      ],
      "properties": {
        "type": {
          "type": "string",
          "example": "monthly/daily"
        },
        "totalExpense": {
          "type": "number",
          "example": 1500000
        },
        "totalIncome": {
          "type": "number",
          "example": 6500000
        },
        "netIncome": {
          "type": "number",
          "example": 5000000
        },
        "maximumExpense": {
          "$ref": "#/definitions/Transaction"
        }
      }
    }
  }
}
